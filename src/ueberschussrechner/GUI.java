/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ueberschussrechner;

import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.*;
import java.awt.print.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Lenovo
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }
    
    
    //Array Listen sowie Datums zeug
    ArrayList<Double> einnahmen = new ArrayList<Double>();
    ArrayList<Double> ausgaben = new ArrayList<Double>();
    private static final DateFormat SDF = new SimpleDateFormat("dd/MM/yyyy hh:mm ");
    Date date = new Date();
    
    //haufen Variablen für den spaß den wir haben YAS
    String text;
    double numero = 0;
    int counterEinnahmen = 0;
    int counterAusgaben = 0;
    int counterTableIndex = 0;
    int counterSave = 0;
    int laengeEinnahmen = 0;
    int laengeAusgaben = 0;
    double einnahmenZusammen = 0;
    double ausgabenZusammen = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAnzeigetabelle = new javax.swing.JTable();
        jLabelTitel = new javax.swing.JLabel();
        labelGesammtbetrag = new javax.swing.JLabel();
        jLabelGesamtbetraganzeige = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        comboBoxEA = new javax.swing.JComboBox<>();
        textfeldKommentar = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        textfeldBetrag = new java.awt.TextField();
        buttonHinzufuegen = new javax.swing.JButton();
        buttonSchliessen = new javax.swing.JButton();
        buttonDruck = new javax.swing.JButton();
        exportCSV = new javax.swing.JButton();
        buttonNeueBuchung = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Überschussrechner");
        setMaximumSize(new java.awt.Dimension(550, 480));
        setMinimumSize(new java.awt.Dimension(550, 480));
        setResizable(false);
        setSize(new java.awt.Dimension(550, 480));

        jTableAnzeigetabelle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nr.:", "Buchungsdatum ", "Einnahmen", "Ausgaben", "Kommentare"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableAnzeigetabelle);
        if (jTableAnzeigetabelle.getColumnModel().getColumnCount() > 0) {
            jTableAnzeigetabelle.getColumnModel().getColumn(0).setResizable(false);
            jTableAnzeigetabelle.getColumnModel().getColumn(1).setResizable(false);
            jTableAnzeigetabelle.getColumnModel().getColumn(2).setResizable(false);
            jTableAnzeigetabelle.getColumnModel().getColumn(3).setResizable(false);
            jTableAnzeigetabelle.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabelTitel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelTitel.setText("Überschussrechner");

        labelGesammtbetrag.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelGesammtbetrag.setText("0.00€");

        jLabelGesamtbetraganzeige.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelGesamtbetraganzeige.setText("Gesamtbetrag:");

        jPanel1.setVisible(false);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Neue Buchung", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel1.setToolTipText("");

        comboBoxEA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Einnahmen", "Ausgaben" }));
        comboBoxEA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEAActionPerformed(evt);
            }
        });

        jLabel1.setText("Kommentar:");

        buttonHinzufuegen.setText("Hinzufügen");
        buttonHinzufuegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHinzufuegenActionPerformed(evt);
            }
        });

        buttonSchliessen.setText("Schließen");
        buttonSchliessen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSchliessenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxEA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonHinzufuegen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSchliessen))
                    .addComponent(textfeldKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfeldBetrag, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboBoxEA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfeldBetrag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textfeldKommentar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonHinzufuegen)
                    .addComponent(buttonSchliessen))
                .addContainerGap())
        );

        buttonDruck.setText("Drucken");
        buttonDruck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDruckActionPerformed(evt);
            }
        });

        exportCSV.setText("Export CSV");
        exportCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportCSVActionPerformed(evt);
            }
        });

        buttonNeueBuchung.setText("Neue Buchung");
        buttonNeueBuchung.setMaximumSize(new java.awt.Dimension(71, 17));
        buttonNeueBuchung.setMinimumSize(new java.awt.Dimension(71, 17));
        buttonNeueBuchung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNeueBuchungActionPerformed(evt);
            }
        });

        jLabel2.setText("by Scam Alert Inc.");

        jLabel3.setMaximumSize(new java.awt.Dimension(412, 291));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitel)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonDruck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exportCSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonNeueBuchung, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(53, 53, 53)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabelGesamtbetraganzeige, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelGesammtbetrag, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabelTitel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGesammtbetrag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelGesamtbetraganzeige, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(buttonNeueBuchung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonDruck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportCSV)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxEAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxEAActionPerformed

    private void exportCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportCSVActionPerformed
        // TODO add your handling code here:
         try {

        DefaultTableModel model = (DefaultTableModel) jTableAnzeigetabelle.getModel(); //wandelt wieder jtable um
        FileWriter csv = new FileWriter(new File("Ueberschuss" + counterSave +".csv")); //initialisiert den Filewrite sowie der Name der File und die endung

        for (int i = 0; i < model.getColumnCount(); i++) {
            csv.write(model.getColumnName(i) + " , "); //Gettet alle columns und deren inhalte, schreibt alles in eine zeile, wiederholt bis keine colums mehr
        }

        csv.write("\n"); //macht immer ne neue zeile nachdem durch

        //Hier das selbe für die Rows
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                csv.write(model.getValueAt(i, j).toString() + ",");
            }
            csv.write("\n");
        }
        
        //Paar absätze, danach nochmal der gesammte überschuss
        csv.write("\n");
        csv.write("\n");
        csv.write("\n");
        csv.write("Ueberschuss Gesammt: " + numero);
        csv.close();
        counterSave++; //Für die einfache mehrfachspeicherung 
    } catch (IOException e) {
        e.printStackTrace(); //Fehlerbehandlung
    }

        
        
    }//GEN-LAST:event_exportCSVActionPerformed

    private void buttonDruckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDruckActionPerformed
        // TODO add your handling code here:
        try{
            jTableAnzeigetabelle.print(); //drucken
        }catch (PrinterException ex){
            //fehlerbehandlung
        }
    }//GEN-LAST:event_buttonDruckActionPerformed

    private void buttonNeueBuchungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNeueBuchungActionPerformed
        // TODO add your handling code here:
        jPanel1.setVisible(true);
    }//GEN-LAST:event_buttonNeueBuchungActionPerformed

    private void buttonHinzufuegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHinzufuegenActionPerformed
        // TODO add your handling code here:
        String erg = textfeldBetrag.getText(); //gettet den Text im textfeld
            double zahl = 0;
            try {
                zahl = Double.parseDouble(erg); //wandelt string in Double um
            } catch (NumberFormatException ex) {
                //Fehlerbehandlung
                JOptionPane.showMessageDialog(new JFrame(), "Bitte geben Sie nur Zahlen ein.\n" + "Nutzen sie statt Komma einen punkt.", "Fehler",
                JOptionPane.ERROR_MESSAGE);
            }
        
        if (comboBoxEA.getSelectedItem().equals("Einnahmen")) //Wenn Einnahmen ausgewählt
        {
            einnahmen.add(zahl); //Addet das im Textfeld in die ArrayList einnahmen
        
            DefaultTableModel model = (DefaultTableModel) jTableAnzeigetabelle.getModel(); //Umwandlung jtable in default table
            model.addRow( new Object[] {counterTableIndex, SDF.format(date), einnahmen.get(counterEinnahmen), "" , textfeldKommentar.getText()}); //Hinzufügen der Sachen
            counterEinnahmen++; //Setzt Counter hoch damit das nächste mal auf wieder das richtige ausgelesen wird
        } 
        else if (comboBoxEA.getSelectedItem().equals("Ausgaben")) //Wenn Ausgaben ausgewählt
        {
            ausgaben.add(zahl); //Oben beschrieben

            DefaultTableModel model = (DefaultTableModel) jTableAnzeigetabelle.getModel();
            model.addRow( new Object[] {counterTableIndex, SDF.format(date), "" ,"-" + ausgaben.get(counterAusgaben), textfeldKommentar.getText()});
            counterAusgaben++;   
        } 
        else
        {
            System.out.println("Nanu? Wie bit du hier gelandet?"); //"Fehlerbehandlung"
        }
        counterTableIndex++; //setzt den index hoch
        
        //Zusammenrechnung der Einnahmen
        for (int i = 0; i<einnahmen.size(); i++){
            einnahmenZusammen = einnahmenZusammen + einnahmen.get(i); //Addiert alle werte in der Arraylist einnahmen (Schaut durch .size nach wie groß die liste ist)
        }
        
        //Zusammenrechnung der Ausgaben
        for (int i = 0; i<ausgaben.size(); i++){
            ausgabenZusammen = ausgabenZusammen + ausgaben.get(i); //Addiert alle werte in der Arraylist ausgaben (Schaut durch .size nach wie groß die liste ist)
        }
        
        //Label wird gesetzt + math
        numero = einnahmenZusammen - ausgabenZusammen; //Berechnung des Überschusses
        text = String.valueOf(numero); //Das ergebnis wird in einen String konvertiert
        labelGesammtbetrag.setText(text + "€"); //Das label bekommt den String zugewiesen sowie das Euro zeichen drangehängt
        
        //Setzt werte auf Null damit keine falsche neuberechnung
        einnahmenZusammen = 0;  //setzt Variablen zum rechnen zurück
        ausgabenZusammen = 0;   //setzt Variablen zum rechnen zurück
        comboBoxEA.setSelectedIndex(0); //Resettet das selektierte zu Einnahmen
        textfeldKommentar.setText(""); //resettet Textfeld Kommentar
        textfeldBetrag.setText(""); //resettet Textfeld Betrag
    }//GEN-LAST:event_buttonHinzufuegenActionPerformed

    private void buttonSchliessenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSchliessenActionPerformed
        // TODO add your handling code here:
        jPanel1.setVisible(false);
    }//GEN-LAST:event_buttonSchliessenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDruck;
    private javax.swing.JButton buttonHinzufuegen;
    private javax.swing.JButton buttonNeueBuchung;
    private javax.swing.JButton buttonSchliessen;
    private javax.swing.JComboBox<String> comboBoxEA;
    private javax.swing.JButton exportCSV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelGesamtbetraganzeige;
    private javax.swing.JLabel jLabelTitel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAnzeigetabelle;
    private javax.swing.JLabel labelGesammtbetrag;
    private java.awt.TextField textfeldBetrag;
    private java.awt.TextField textfeldKommentar;
    // End of variables declaration//GEN-END:variables
}
